runtime: go113

env_variables:
  CONFIG_FILE: "metrics.yaml"
  # How far to look back while searching for recent data in Stackdriver.
  # This should be reasonably short to prevent fetching too much data from Stackdriver every time a metric is synced.
  SD_LOOKBACK_INTERVAL: "1h"
  # Total timeout for updating all metrics.
  # App Engine Cron will only issue a single concurrent HTTP request to the app, so if any outgoing API call gets stuck,
  # no further metric updates will be performed. Having a timeout will ensure such stuck updates get aborted and
  # later retried.
  UPDATE_TIMEOUT: "5m"
  # Name of the Stackdriver project that will be used to report internal ts-bridge metrics (import latencies,
  # metric age). If not set, the project hosting the ts-bridge App Engine app itself will be used.
  #SD_PROJECT_FOR_INTERNAL_METRICS: "my-project"
  # Number of metrics to update in parallel. Must be between 1 and 100 (chosen arbitrarily).
  UPDATE_PARALLELISM: 1
  # Points received from metric sources that are too fresh will be discarded to allow data to settle before being imported.
  # This variable defines the threshold for "too fresh".
  MIN_POINT_AGE: "2m"
  # While importing counters, ts-bridge needs to reset 'start time' regularly to keep the query time window small enough
  # to avoid aggregation. This parameter defines how often a new start time is chosen. 30min should be sufficient for
  # metrics that have a point every 10 seconds.
  COUNTER_RESET_INTERVAL: "30m"
  # Select storage engine to keep the metrics metadata in, currently supported options:
  # "datastore" - AppEngine Datastore
  STORAGE_ENGINE: "datastore"
  # Project to use for Datastore. If not set, the project hosting the ts-bridge App Engine app itself will be used.
  #DATASTORE_PROJECT: "my-project"
  # Uncomment to enable the status web page.
  #ENABLE_STATUS_PAGE: "yes"

handlers:
- url: /
  script: auto
- url: /(sync|cleanup)
  script: auto
